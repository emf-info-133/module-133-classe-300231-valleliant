{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';export const getAllTournaments=async()=>{const token=localStorage.getItem('token');try{const response=await fetch(`${API_URL}/tournaments`,{headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Impossible de récupérer les tournois');}return await response.json();}catch(error){throw error;}};export const getTournamentById=async tournamentId=>{const token=localStorage.getItem('token');try{const response=await fetch(`${API_URL}/tournaments/${tournamentId}`,{headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Impossible de récupérer le tournoi');}return await response.json();}catch(error){throw error;}};export const createTeam=async(tournamentId,teamName)=>{const token=localStorage.getItem('token');try{const response=await fetch(`${API_URL}/teams`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify({name:teamName,tournamentId})});if(!response.ok){throw new Error('Impossible de créer l\\'équipe');}return await response.json();}catch(error){throw error;}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getAllTournaments","token","localStorage","getItem","response","fetch","headers","ok","Error","json","error","getTournamentById","tournamentId","createTeam","teamName","method","body","JSON","stringify","name"],"sources":["/root/projet/module-133-classe-300231-valleliant/projet/client1/src/services/tournamentService.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nexport const getAllTournaments = async () => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/tournaments`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer les tournois');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getTournamentById = async (tournamentId) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/tournaments/${tournamentId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer le tournoi');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createTeam = async (tournamentId, teamName) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/teams`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({ \n        name: teamName,\n        tournamentId\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de créer l\\'équipe');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n}; "],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,OAAO,cAAc,CAAE,CACrDU,OAAO,CAAE,CACP,eAAe,CAAE,UAAUL,KAAK,EAClC,CACF,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,sCAAsC,CAAC,CACzD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAO,CAAAC,YAAY,EAAK,CACvD,KAAM,CAAAX,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,OAAO,gBAAgBgB,YAAY,EAAE,CAAE,CACrEN,OAAO,CAAE,CACP,eAAe,CAAE,UAAUL,KAAK,EAClC,CACF,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oCAAoC,CAAC,CACvD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,UAAU,CAAG,KAAAA,CAAOD,YAAY,CAAEE,QAAQ,GAAK,CAC1D,KAAM,CAAAb,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGT,OAAO,QAAQ,CAAE,CAC/CmB,MAAM,CAAE,MAAM,CACdT,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAUL,KAAK,EAClC,CAAC,CACDe,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEL,QAAQ,CACdF,YACF,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACR,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CAClD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}