{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nexport const getAllTournaments = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await fetch(`${API_URL}/tournaments`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer les tournois');\n    }\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getTournamentById = async tournamentId => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await fetch(`${API_URL}/tournaments/${tournamentId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer le tournoi');\n    }\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createTeam = async (tournamentId, teamName) => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await fetch(`${API_URL}/teams`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        name: teamName,\n        tournamentId\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Impossible de créer l\\'équipe');\n    }\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getAllTournaments","token","localStorage","getItem","response","fetch","headers","ok","Error","json","error","getTournamentById","tournamentId","createTeam","teamName","method","body","JSON","stringify","name"],"sources":["/root/projet/module-133-classe-300231-valleliant/projet/client1/src/services/tournamentService.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nexport const getAllTournaments = async () => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/tournaments`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer les tournois');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getTournamentById = async (tournamentId) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/tournaments/${tournamentId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer le tournoi');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const createTeam = async (tournamentId, teamName) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/teams`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n      body: JSON.stringify({ \n        name: teamName,\n        tournamentId\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de créer l\\'équipe');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,cAAc,EAAE;MACrDU,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;IACzD;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,YAAY,IAAK;EACvD,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,gBAAgBgB,YAAY,EAAE,EAAE;MACrEN,OAAO,EAAE;QACP,eAAe,EAAE,UAAUL,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACvD;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAOD,YAAY,EAAEE,QAAQ,KAAK;EAC1D,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,QAAQ,EAAE;MAC/CmB,MAAM,EAAE,MAAM;MACdT,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUL,KAAK;MAClC,CAAC;MACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAEL,QAAQ;QACdF;MACF,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}