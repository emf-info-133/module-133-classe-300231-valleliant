{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';export const getTeamsByTournament=async tournamentId=>{const token=localStorage.getItem('token');try{const response=await fetch(`${API_URL}/teams/tournament/${tournamentId}`,{headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Impossible de récupérer les équipes');}return await response.json();}catch(error){throw error;}};export const joinTeam=async teamId=>{const token=localStorage.getItem('token');try{const response=await fetch(`${API_URL}/teams/${teamId}/join`,{method:'POST',headers:{'Authorization':`Bearer ${token}`}});if(!response.ok){throw new Error('Impossible de rejoindre l\\'équipe');}return await response.json();}catch(error){throw error;}};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","getTeamsByTournament","tournamentId","token","localStorage","getItem","response","fetch","headers","ok","Error","json","error","joinTeam","teamId","method"],"sources":["/root/projet/module-133-classe-300231-valleliant/projet/client1/src/services/teamService.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nexport const getTeamsByTournament = async (tournamentId) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/teams/tournament/${tournamentId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de récupérer les équipes');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const joinTeam = async (teamId) => {\n  const token = localStorage.getItem('token');\n  \n  try {\n    const response = await fetch(`${API_URL}/teams/${teamId}/join`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Impossible de rejoindre l\\'équipe');\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n}; "],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,MAAO,MAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAC,YAAY,EAAK,CAC1D,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,qBAAqBK,YAAY,EAAE,CAAE,CAC1EM,OAAO,CAAE,CACP,eAAe,CAAE,UAAUL,KAAK,EAClC,CACF,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,qCAAqC,CAAC,CACxD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,MAAM,EAAK,CACxC,KAAM,CAAAX,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGV,OAAO,UAAUiB,MAAM,OAAO,CAAE,CAC9DC,MAAM,CAAE,MAAM,CACdP,OAAO,CAAE,CACP,eAAe,CAAE,UAAUL,KAAK,EAClC,CACF,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,mCAAmC,CAAC,CACtD,CAEA,MAAO,MAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}