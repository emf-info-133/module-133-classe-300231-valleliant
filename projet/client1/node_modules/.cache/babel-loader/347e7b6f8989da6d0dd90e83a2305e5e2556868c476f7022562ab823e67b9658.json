{"ast":null,"code":"import{mockTeams}from'./tournamentService';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8080/api';export const getTeamsByTournament=async tournamentId=>{// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,400));const tid=parseInt(tournamentId,10);return mockTeams.filter(team=>team.tournamentId===tid);};export const joinTeam=async teamId=>{// Simuler une latence réseau\nawait new Promise(resolve=>setTimeout(resolve,600));// Récupérer l'utilisateur depuis le localStorage\nconst userStr=localStorage.getItem('user');if(!userStr){throw new Error('Vous devez être connecté pour rejoindre une équipe');}const user=JSON.parse(userStr);const tid=parseInt(teamId,10);// Trouver l'équipe\nconst team=mockTeams.find(t=>t.id===tid);if(!team){throw new Error('Équipe non trouvée');}// Vérifier si l'utilisateur est déjà membre\nif(team.members.some(m=>m.id===user.id)){throw new Error('Vous êtes déjà membre de cette équipe');}// Vérifier si l'équipe est complète\nif(team.members.length>=team.maxMembers){throw new Error('L\\'équipe est complète');}// Ajouter l'utilisateur à l'équipe\nteam.members.push({id:user.id,name:user.name,email:user.email});return{...team};};","map":{"version":3,"names":["mockTeams","API_URL","process","env","REACT_APP_API_URL","getTeamsByTournament","tournamentId","Promise","resolve","setTimeout","tid","parseInt","filter","team","joinTeam","teamId","userStr","localStorage","getItem","Error","user","JSON","parse","find","t","id","members","some","m","length","maxMembers","push","name","email"],"sources":["/root/projet/module-133-classe-300231-valleliant/projet/client1/src/services/teamService.js"],"sourcesContent":["import { mockTeams } from './tournamentService';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\n\nexport const getTeamsByTournament = async (tournamentId) => {\n  // Simuler une latence réseau\n  await new Promise(resolve => setTimeout(resolve, 400));\n  \n  const tid = parseInt(tournamentId, 10);\n  return mockTeams.filter(team => team.tournamentId === tid);\n};\n\nexport const joinTeam = async (teamId) => {\n  // Simuler une latence réseau\n  await new Promise(resolve => setTimeout(resolve, 600));\n  \n  // Récupérer l'utilisateur depuis le localStorage\n  const userStr = localStorage.getItem('user');\n  if (!userStr) {\n    throw new Error('Vous devez être connecté pour rejoindre une équipe');\n  }\n  \n  const user = JSON.parse(userStr);\n  const tid = parseInt(teamId, 10);\n  \n  // Trouver l'équipe\n  const team = mockTeams.find(t => t.id === tid);\n  if (!team) {\n    throw new Error('Équipe non trouvée');\n  }\n  \n  // Vérifier si l'utilisateur est déjà membre\n  if (team.members.some(m => m.id === user.id)) {\n    throw new Error('Vous êtes déjà membre de cette équipe');\n  }\n  \n  // Vérifier si l'équipe est complète\n  if (team.members.length >= team.maxMembers) {\n    throw new Error('L\\'équipe est complète');\n  }\n  \n  // Ajouter l'utilisateur à l'équipe\n  team.members.push({\n    id: user.id,\n    name: user.name,\n    email: user.email\n  });\n  \n  return { ...team };\n}; "],"mappings":"AAAA,OAASA,SAAS,KAAQ,qBAAqB,CAE/C,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,MAAO,MAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAC,YAAY,EAAK,CAC1D;AACA,KAAM,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,GAAG,CAAC,CAAC,CAEtD,KAAM,CAAAE,GAAG,CAAGC,QAAQ,CAACL,YAAY,CAAE,EAAE,CAAC,CACtC,MAAO,CAAAN,SAAS,CAACY,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACP,YAAY,GAAKI,GAAG,CAAC,CAC5D,CAAC,CAED,MAAO,MAAM,CAAAI,QAAQ,CAAG,KAAO,CAAAC,MAAM,EAAK,CACxC;AACA,KAAM,IAAI,CAAAR,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,GAAG,CAAC,CAAC,CAEtD;AACA,KAAM,CAAAQ,OAAO,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC5C,GAAI,CAACF,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAG,KAAK,CAAC,oDAAoD,CAAC,CACvE,CAEA,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACN,OAAO,CAAC,CAChC,KAAM,CAAAN,GAAG,CAAGC,QAAQ,CAACI,MAAM,CAAE,EAAE,CAAC,CAEhC;AACA,KAAM,CAAAF,IAAI,CAAGb,SAAS,CAACuB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKf,GAAG,CAAC,CAC9C,GAAI,CAACG,IAAI,CAAE,CACT,KAAM,IAAI,CAAAM,KAAK,CAAC,oBAAoB,CAAC,CACvC,CAEA;AACA,GAAIN,IAAI,CAACa,OAAO,CAACC,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACH,EAAE,GAAKL,IAAI,CAACK,EAAE,CAAC,CAAE,CAC5C,KAAM,IAAI,CAAAN,KAAK,CAAC,uCAAuC,CAAC,CAC1D,CAEA;AACA,GAAIN,IAAI,CAACa,OAAO,CAACG,MAAM,EAAIhB,IAAI,CAACiB,UAAU,CAAE,CAC1C,KAAM,IAAI,CAAAX,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CAEA;AACAN,IAAI,CAACa,OAAO,CAACK,IAAI,CAAC,CAChBN,EAAE,CAAEL,IAAI,CAACK,EAAE,CACXO,IAAI,CAAEZ,IAAI,CAACY,IAAI,CACfC,KAAK,CAAEb,IAAI,CAACa,KACd,CAAC,CAAC,CAEF,MAAO,CAAE,GAAGpB,IAAK,CAAC,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}