version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./apiGateway
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    depends_on:
      - service-rest1
      - service-rest2
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m

  # Service REST 1
  service-rest1:
    build: ./serviceRest1
    ports:
      - "8081:8080"
    networks:
      - microservices-network
    depends_on:
      - mysql-db
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/133-db-alparslanc
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=emf123

  # Service REST 2
  service-rest2:
    build: ./serviceRest2
    ports:
      - "8082:8080"
    networks:
      - microservices-network
    depends_on:
      - mysql-db
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/133-db-alparslanc
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=emf123

  # Client 1
  client1:
    build: ./client1
    ports:
      - "3000:3000"
    networks:
      - microservices-network
    depends_on:
      - api-gateway

  # Client 2
  client2:
    build: ./client2
    ports:
      - "3001:3000"
    networks:
      - microservices-network
    depends_on:
      - api-gateway
      
  # MySQL Database
  mysql-db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: emf123
      MYSQL_DATABASE: 133-db-alparslanc
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - microservices-network
    command: --default-authentication-plugin=mysql_native_password

networks:
  microservices-network:
    driver: bridge
    
volumes:
  mysql-data:
